name: Deploy staging

on:
  push:
    branches:

jobs:
  deploy-develop:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Generate config data
        run: |
          jq -n \
            --arg crab_smart_seed "${{ secrets.CRAB_SMART_SEED }}" \
            '{
              crab_smart_seed: $crab_smart_seed
            }' | tee chain_data.json
          jq -n \
            --arg github_oauth_app_key "${{ secrets.X_GITHUB_OAUTH_APP_KEY }}" \
            --arg github_oauth_app_secret "${{ secrets.X_GITHUB_OAUTH_APP_SECRET }}" \
            '{
              github_oauth_app_key: $github_oauth_app_key,
              github_oauth_app_secret: $github_oauth_app_secret
            }' | tee grant_data.json
          jq -n \
            --arg redis_connect_url "${{ secrets.REDIS_CONNECT_URL }}" \
            '{
              url: $redis_connect_url
            }' | tee redis_data.json

      - name: Render chain config
        uses: jayamanikharyono/jinja-action@v0.1
        with:
          datafile: chain_data.json
          path: airdrop/api/config/chain.json

      - name: Render grant config
        uses: jayamanikharyono/jinja-action@v0.1
        with:
          datafile: grant_data.json
          path: airdrop/api/config/grant.json

      - name: Render redis config
        uses: jayamanikharyono/jinja-action@v0.1
        with:
          datafile: redis_data.json
          path: airdrop/api/config/redis.json

      - name: Prepare Project Config
        run: |
          mv airdrop/api/config/chain.json airdrop/api/config/chain.safe.json
          mv airdrop/api/config/grant.json airdrop/api/config/grant.safe.json
          mv airdrop/api/config/redis.json airdrop/api/config/redis.safe.json
          mv vercel.json build/
          mv airdrop/* build/

      - name: Deploy
        id: deploy
        run: |
          REPO_NAME=${GITHUB_REPOSITORY#*/}
          mv build $REPO_NAME
          cd $REPO_NAME
          vercel --token ${{ secrets.VERCEL_TOKEN }} --scope itering link --confirm
          vercel --token ${{ secrets.VERCEL_TOKEN }} --scope itering deploy | tee deploy.log
          content=$(cat deploy.log)
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo ''
          echo "::set-output name=VERCEL_OUTPUT::$content"

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: darwinia-docs-edu
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://avatars.githubusercontent.com/u/14985020?s=48&v=4
          SLACK_MESSAGE: '${{ steps.deploy.outputs.VERCEL_OUTPUT }}'
          SLACK_TITLE: Preview
          SLACK_USERNAME: Vercel
          SLACK_WEBHOOK: ${{ secrets.SLACK_INCOMING_WEBHOOK_URL }}
